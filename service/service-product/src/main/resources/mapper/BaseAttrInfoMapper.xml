<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--Non-essential attributes! The full path of the namespace interface! -->
<mapper namespace="com.atguigu.gmall.product.mapper.BaseAttrInfoMapper">
    <!--Return result set mapping
        id: the unique identifier of the returned result set
        type: the data type of the returned result set
        autoMapping: Automatic mapping {database table fields}
    -->
    <resultMap id="BaseAttrInfoMap" type="com.atguigu.gmall.model.product.BaseAttrInfo" autoMapping="true">
        <!--
            id: indicates the primary key
            column: the column displayed after the sql statement is executed
            property: the attribute of the entity class
        -->
        <!-- <id column="id" property="id"></id>-->
        <!-- &lt;!&ndash;-->
        <!-- result fields other than the primary key-->
        <!-- &ndash;&gt;-->
        <!-- <result column="attr_name" property="attrName"></result>-->
        <!--
            Platform attribute: platform attribute value Relationship 1:n mybatis If this relationship is configured?
            Collection configuration one-to-many!
            property: the attribute of the entity class
            ofType: data type
            autoMapping: Disadvantages cannot have duplicate fields! Get an alias!
        -->
        <!--Tell us who is 1, the current object through the id primary key -->
        <id column="id" property="id"></id>

        <!---Configure many objects! -->
        <collection property="attrValueList" ofType="com.atguigu.gmall.model.product.BaseAttrValue" autoMapping="true">
            <id property="id" column="attr_value_id"></id>
        </collection>
        <!--<association property=""></association> Many to 1-->
    </resultMap>

    <!--CURD label! -->
    <!--
        id: method name
        resultMap: return result set map
        $, # Difference?
        $: There is a risk of SQL injection. Not recommended!
        #: no risk
    -->
    <select id="selectBaseAttrInfoList" resultMap="BaseAttrInfoMap">
        select bai.id,
        bai.category_level,
        bai.category_id,
        bai.attr_name,
        bav.id attr_value_id,
        bav.value_name,
        bav.attr_id
        from base_attr_info bai
        inner join base_attr_value bav on bai.id = bav.attr_id
        <where>
            <if test="category1Id != null and category1Id != 0">
                or bai.category_id = #{category1Id} and bai.category_level = 1
            </if>
            <if test="category2Id != null and category2Id != 0">
                or bai.category_id = #{category2Id} and bai.category_level = 2
            </if>
            <if test="category3Id != null and category3Id != 0">
                or bai.category_id = #{category3Id} and bai.category_level = 3
            </if>
        </where>
        order by bai.category_level, bai.id
    </select>

    <!--Query platform attributes and attribute value data according to skuId-->
    <select id="selectBaseAttrInfoListBySkuId" resultMap="BaseAttrInfoMap">
        SELECT
            bai.id,
            bai.attr_name,
            bai.category_id,
            bai.category_level,
            bav.id attr_value_id,
            bav.value_name,
            bav.attr_id
        FROM
            base_attr_info bai
                INNER JOIN base_attr_value bav ON bai.id = bav.attr_id
                INNER JOIN sku_attr_value sav ON sav.value_id = bav.id
        WHERE
            sav.sku_id = #{skuId}
    </select>
</mapper>